;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; This is a sample configuration file for the ExtendedSoapClientService of the APF.                                    ;
;                                                                                                                      ;
; Each instance of this service must be created with the DI service manager injecting                                  ;
; - the wsdl url                                                                                                       ;
; - the service endpoint (a.k.a. location)                                                                             ;
; - the namespace mappings to parse the response with                                                                  ;
; - the xpath expression to analyze the response regarding faults (in compliance with the namespace mappings)          ;
;                                                                                                                      ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[SoapService]
servicetype = "..."
namespace = "tools::soap"
class = "ExtendedSoapClientService"

; wsdl url
conf.wsdl.method = "setWsdlUrl"
conf.wsdl.value = "http://example.com/.../soap?wsdl"

; service endpoint
conf.service.method = "setLocation"
conf.service.value = "http://example.com/.../soap"

; optional configuration possibilities (see setters for a full list of possibilities)
;conf.version.method = "setSoapVersion"
;conf.version.value = SOAP_1_1

; optional configuration of HTTP BASE AUTH credentials (using configuration)
;conf.username.method = "setHttpAuthUsername"
;conf.username.value = "..."
;conf.password.method = "setHttpAuthPassword"
;conf.password.value = "..."

; optional configuration of HTTP BASE AUTH credentials (using dependency injection; sample for injected service see below)
;init.base-auth.method = "setHttpAuthCredentials"
;init.base-auth.namespace = "mx::main::biz"
;init.base-auth.name = "HttpBaseAuthCredentials"

; optional object mapping using dependency injection (sample for injected service see below)
;init.obj-one.method = "registerWsdlObjectMapping"
;init.obj-one.namespace = "..."
;init.obj-one.name = "LoginResponse"


; example for WSDL object mapping definition
;[LoginResponse]
;servicetype = "NORMAL"
;namespace = "tools::soap"
;class = "WsdlObjectMapping"
;
;conf.type.method = "setWsdlType"
;conf.type.value = "LoginResponseSpecialType"
;conf.ns.method = "setPhpClassNamespace"
;conf.ns.value = "sample::namespace"
;conf.class.method = "setPhpClassName"
;conf.class.value = "LoginResponse"


; example for HTTP BASE AUTH credential definition
;[HttpBaseAuthCredentials]
;servicetype = "NORMAL"
;namespace = "tools::soap"
;class = "SoapHttpBaseAuthCredentials"
;
;conf.username.method = "setUsername"
;conf.username.value = "portal_mx"
;conf.password.method = "setPassword"
;conf.password.value = "portal_mx"